"use strict";(self.webpackChunkCSP451=self.webpackChunkCSP451||[]).push([[369],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>d});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var s=n.createContext({}),p=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},c=function(e){var t=p(e.components);return n.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,i=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),m=p(r),d=o,g=m["".concat(s,".").concat(d)]||m[d]||u[d]||i;return r?n.createElement(g,a(a({ref:t},c),{},{components:r})):n.createElement(g,a({ref:t},c))}));function d(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=r.length,a=new Array(i);a[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:o,a[1]=l;for(var p=2;p<i;p++)a[p]=r[p];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},4741:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>a,default:()=>u,frontMatter:()=>i,metadata:()=>l,toc:()=>p});var n=r(3117),o=(r(7294),r(3905));const i={id:"repositories",title:"Cloning Repositories",sidebar_position:1,description:"TBD"},a=void 0,l={unversionedId:"tutorials-github/repositories",id:"tutorials-github/repositories",title:"Cloning Repositories",description:"TBD",source:"@site/docs/tutorials-github/15-cloning-repositories.md",sourceDirName:"tutorials-github",slug:"/tutorials-github/repositories",permalink:"/CSP451/tutorials-github/repositories",draft:!1,editUrl:"https://github.com/Seneca-ICTOER/CSP451/tree/main/docs/tutorials-github/15-cloning-repositories.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{id:"repositories",title:"Cloning Repositories",sidebar_position:1,description:"TBD"},sidebar:"courseNotesSidebar",previous:{title:"Getting started",permalink:"/CSP451/tutorials-github/getting-started"},next:{title:"Cloning Repositories",permalink:"/CSP451/tutorials-github/repositories"}},s={},p=[{value:"Repository terminology",id:"repository-terminology",level:2},{value:"Cloning a repository",id:"cloning-a-repository",level:2},{value:"Sources",id:"sources",level:2}],c={toc:p};function u(e){let{components:t,...i}=e;return(0,o.kt)("wrapper",(0,n.Z)({},c,i,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"\u2728 This page serves as Quickstart for working with repositories. For a more comprehensive reference about Working with GitHub repositories, refer to ",(0,o.kt)("a",{parentName:"p",href:"https://docs.github.com/en/repositories/creating-and-managing-repositories"},"Creating and managing repositories"))),(0,o.kt)("h2",{id:"repository-terminology"},"Repository terminology"),(0,o.kt)("p",null,"A repository is the most basic element of GitHub. Before getting started with repositories, learn these important terms."),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Term"),(0,o.kt)("th",{parentName:"tr",align:null},"Definition"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"Branch"),(0,o.kt)("td",{parentName:"tr",align:null},"A parallel version of your code that is contained within the repository, but does not affect the primary or main branch.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"Clone"),(0,o.kt)("td",{parentName:"tr",align:null},"To download a full copy of a repository's data from GitHub, including all versions of every file and folder.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"Fork"),(0,o.kt)("td",{parentName:"tr",align:null},'A new repository that shares code and visibility settings with the original "upstream" repository.')),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"Merge"),(0,o.kt)("td",{parentName:"tr",align:null},"To take the changes from one branch and apply them to another.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"Pull request"),(0,o.kt)("td",{parentName:"tr",align:null},"A request to merge changes from one branch into another.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"Remote"),(0,o.kt)("td",{parentName:"tr",align:null},"A repository stored on GitHub, not on your computer.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"Upstream"),(0,o.kt)("td",{parentName:"tr",align:null},'The branch on an original repository that has been forked or cloned. The corresponding branch on the cloned or forked branch is called the "downstream."')),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null}),(0,o.kt)("td",{parentName:"tr",align:null})))),(0,o.kt)("h2",{id:"cloning-a-repository"},"Cloning a repository"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"On GitHub.com, navigate to the main page of the repository."),(0,o.kt)("li",{parentName:"ol"},"Above the list of files, click ",(0,o.kt)("strong",{parentName:"li"},"Code")," button.\n",(0,o.kt)("img",{alt:"Screenshot of &lt;&gt; Code icon",src:r(1696).Z,width:"802",height:"240"})),(0,o.kt)("li",{parentName:"ol"},"Copy the URL for the repository.",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"To clone the repository using ",(0,o.kt)("strong",{parentName:"li"},"HTTPS"),", under HTTPS, click ",(0,o.kt)("em",{parentName:"li"},"clipboard")," icon."),(0,o.kt)("li",{parentName:"ul"},"To clone the repository using an ",(0,o.kt)("strong",{parentName:"li"},"SSH")," key, including a certificate issued by your organization's SSH certificate authority, click SSH, then click ",(0,o.kt)("em",{parentName:"li"},"clipboard")," icon."),(0,o.kt)("li",{parentName:"ul"},"To clone a repository using ",(0,o.kt)("strong",{parentName:"li"},"GitHub CLI"),", click GitHub CLI, then click ",(0,o.kt)("em",{parentName:"li"},"copy")," icon.\n",(0,o.kt)("img",{alt:"Screenshot of clone with html-ssh-github cli",src:r(9530).Z,width:"926",height:"694"})))),(0,o.kt)("li",{parentName:"ol"},"Open ",(0,o.kt)("strong",{parentName:"li"},"Git Bash"),"."),(0,o.kt)("li",{parentName:"ol"},"Change the current working directory to the location where you want the cloned directory."),(0,o.kt)("li",{parentName:"ol"},"Type ",(0,o.kt)("inlineCode",{parentName:"li"},"git clone"),", and then paste the URL you copied earlier.")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-markdown"},"git clone https://github.com/YOUR-USERNAME/YOUR-REPOSITORY\n")),(0,o.kt)("ol",{start:7},(0,o.kt)("li",{parentName:"ol"},"Press ",(0,o.kt)("strong",{parentName:"li"},"Enter")," to create your local clone.")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"$ git clone https://github.com/YOUR-USERNAME/YOUR-REPOSITORY\n> Cloning into `Spoon-Knife`...\n> remote: Counting objects: 10, done.\n> remote: Compressing objects: 100% (8/8), done.\n> remove: Total 10 (delta 1), reused 10 (delta 1)\n> Unpacking objects: 100% (10/10), done.\n")),(0,o.kt)("h2",{id:"sources"},"Sources"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("cite",null,"[About repositories][1]")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("cite",null,"[Cloning a repository][2]"))))}u.isMDXComponent=!0},1696:(e,t,r)=>{r.d(t,{Z:()=>n});const n=r.p+"assets/images/code-button-329fa7770d2505d8c9fbed3d8f63df85.png"},9530:(e,t,r)=>{r.d(t,{Z:()=>n});const n=r.p+"assets/images/https-url-clone-cli-1fd264c8cf475dceaf4ec288d97853ca.png"}}]);